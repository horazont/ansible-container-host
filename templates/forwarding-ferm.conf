{% for item in networks %}
@hook post "iptables -t mangle -I POSTROUTING -o {{ item.iface }} -p udp -m udp --dport 68 -j CHECKSUM --checksum-fill";
{% endfor %}

domain (ip ip6) {
{% for item in nat_port_forwarding %}
    table nat chain PREROUTING daddr {{ item.host_addr }} proto {{ item.proto }} dport {{ item.host_port }} DNAT to {{ item.guest_addr }}:{{ item.guest_port }};
    table filter chain FORWARD daddr {{ item.guest_addr }} proto {{ item.proto }} dport {{ item.guest_port }} ACCEPT;
{% endfor %}
}

domain (ip ip6) {
{% for item in networks %}
{% if item.mode | default("nat") == "nat" %}
    table nat chain POSTROUTING {
        saddr {{ item.addr }}/{{ item.netmask }} daddr 224.0.0.0/24 RETURN;
        saddr {{ item.addr }}/{{ item.netmask }} daddr 255.255.255.255/32 RETURN;
        saddr {{ item.addr }}/{{ item.netmask }} daddr ! {{ item.addr }}/{{ item.netmask }} proto (tcp udp) MASQUERADE to-ports 1025-65535 random;
        saddr {{ item.addr }}/{{ item.netmask }} daddr ! {{ item.addr }}/{{ item.netmask }} MASQUERADE;
    }
    table filter chain FORWARD {
        daddr {{ item.addr }}/{{ item.netmask }} outerface {{ item.iface }} mod state state (RELATED ESTABLISHED) ACCEPT;
        saddr {{ item.addr }}/{{ item.netmask }} interface {{ item.iface }} ACCEPT;
        interface {{ item.iface }} outerface {{ item.iface }} ACCEPT;
        outerface {{ item.iface }} REJECT reject-with icmp-port-unreachable;
        interface {{ item.iface }} REJECT reject-with icmp-port-unreachable;
    }
{% endif %}
    table filter chain INPUT {
        interface {{ item.iface }} proto (tcp udp) dport (53 67) ACCEPT;
    }
{% endfor %}
}
