{% from "nft-tools.j2" import ip6_ll, solicit_mc %}

# MAC/ARP/IP SPOOFING FILTERS
{% for container in containers %}
## container {{ container.name }}
{% for network in container.networks %}
### network interface to {{ network.net }} of {{ container.name }}
### hostif={{ network.host_ifname }}
### guestif={{ network.guest_ifname | default('') }}
{% set netobj = (networks | selectattr('name', 'equalto', network.net) | list)[0] %}
{% if netobj.strict | default(True) %}
{% set fwd_chain_name = "ENF-" + network.host_ifname %}
table bridge filter {
    chain CHK-{{ network.host_ifname }}-MAC {
        ether saddr {{ network.mac }} return;
        drop;
    }

    chain PREROUTING {
        meta iifname {{ network.host_ifname }} jump {{ fwd_chain_name }};
    }

{% if network.ip6 | default(False) %}
    chain {{ fwd_chain_name }}v6 {
        icmpv6 type nd-neighbor-advert @th,64,128 {{ network.ip6 | ipv6('address') | ipv6('int') }} accept;
        icmpv6 type nd-neighbor-advert @th,64,128 {{ ip6_ll(network.mac) | ipv6('address') | ipv6('int') }} accept;
        icmpv6 type nd-neighbor-advert drop;
        icmpv6 type nd-redirect drop;
        icmpv6 type nd-router-advert drop;
        icmpv6 type router-renumbering drop;
        accept;
    }
{% endif %}

    chain {{ fwd_chain_name }} {
        jump CHK-{{ network.host_ifname }}-MAC;
        # no rogue DHCP servers
        udp dport 68 udp sport 67 drop;
{% if network.ip4 | default(False) %}
        ip saddr 0.0.0.0/32 udp sport 68 udp dport 67 accept;
{% set ip4addrs = [network.ip4] if network.ip4 is string else network.ip4 %}
        ip saddr { {{ ip4addrs | ipv4('address') | join(", ") }} } accept;
        arp operation reply arp plen 4 @nh,112,32 { {{ ip4addrs | ipv4('address') | ipv4('int') | join(", ") }} } @nh,64,48 { {{ network.mac | hwaddr('int') }} } accept;
        arp operation request accept;
{% endif %}

{% if network.ip6 | default(False) %}
        # first filter all IPv6 traffic for valid sender addresses
        ip6 saddr {{ network.ip6 | ipv6('address') }} jump {{ fwd_chain_name }}v6;
        ip6 saddr {{ ip6_ll(network.mac) | ipv6('address') }} jump {{ fwd_chain_name }}v6;
        ip6 saddr ::/128 ip6 daddr { {{ solicit_mc(ip6_ll(network.mac)) }}, {{ solicit_mc(network.ip6) }}, fe02::1/128, fe02::2/128 } jump {{ fwd_chain_name }}v6;
{% endif %}
        drop;
    }
}
{% endif %}
{% endfor %}
{% endfor %}
